#!bash

__git_integration_branches () {
	git for-each-ref --format='%(refname)' refs/insns/ 2>/dev/null |
	sed -e 's!^refs/insns/!!'
}

__git_integration_prefixes () {
	git for-each-ref --format='%(refname)' refs/remotes/ 2>/dev/null |
	sed -e 's!^refs/remotes/!!' -e 's!/.*$!/!' |
	sort | uniq
}

__git_integration_options="\
--create
--add=
--edit
--cat
--rebuild
--no-rebuild
--status
--continue
--abort
--autocontinue
--no-autocontinue
--prefix=
"

_git_integration () {
	# Disable default filename completion.  Note that "compopt" is only
	# available in Bash 4 and newer, so we check for existence before
	# trying to use it.
	type compopt >/dev/null 2>&1 && compopt +o default +o bashdefault


	local i found_command=0 found_create=0 nargs=0
	for ((i=0; i < ${cword}; i++)); do
		case "$found_command,${words[i]}" in
		1,--create)
			found_create=1
			;;
		?,-*)
			:
			;;
		0,integration)
			# This is the start of the arguments to
			# "git integration".
			found_command=1
			;;
		1,*)
			((nargs++))
			;;
		esac
	done

	case "$cur" in
	--add=*)
		__gitcomp_nl "$(__git_refs)" "" "${cur##--add=}"
		return
		;;
	--prefix=*)
		__gitcomp_nl "$(__git_integration_prefixes)" "" "${cur##--prefix=}"
		return
		;;
	-*)
		__gitcomp "$__git_integration_options"
		return
		;;
	esac

	if test "$prev" = "--add"
	then
		__gitcomp_nl "$(__git_refs)"
		return
	fi

	case $found_create,$nargs in
	0,0)
		__gitcomp_nl "$(__git_integration_branches)"
		;;
	?,1)
		__gitcomp_nl "$(__git_heads)"
		;;
	*)
		COMPREPLY=()
		return
	esac

	if test -z "$cur"
	then
		COMPREPLY+=($(compgen -W "$__git_integration_options"))
	fi
}
